<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-parent</artifactId>
        <version>2.6.1</version>
    </parent>

    <!--

      生成构件
          artifactId-version[classifier].packaging
          NOTE:packaging并非和文件扩展名相同，比如packaging是maven-plugin生成的构件文件扩展名是.jar

          classifier用来构附属构件，比如javadoc resource等

    -->
    <groupId>com.citi.mvnbook.account</groupId>
    <artifactId>account-parent</artifactId>
    <version>1.1.0-RELEASE</version>
    <modules>
        <module>account-persist</module>
        <module>account-email</module>
        <module>account-captcha</module>
        <module>account-service</module>
        <module>account-web</module>
    </modules>
    <packaging>pom</packaging>
    <name>Account Parent</name>
    <description>Account relative modules</description>
    <inceptionYear>2022/11/7</inceptionYear>

    <!--software configuration management-->
    <scm>
        <connection>scm:git:https://github.com/WangTf-create/account-parent.git</connection>
        <developerConnection>scm:git:https://github.com/WangTf-create/account-parent.git</developerConnection>
        <url>https://github.com/WangTf-create/account-parent.git</url>
      <tag>1.1.0-RELEASE-TAG</tag>
  </scm>
    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--归类依赖-->
        <springframework.version>2.7.4</springframework.version>
        <junit.version>4.13.2</junit.version>
        <lombok.version>1.18.24</lombok.version>
        <dom.version>2.1.3</dom.version>
        <common.lang3.version>3.12.0</common.lang3.version>
        <common.io.version>2.6</common.io.version>
        <spring.mybatis.version>2.1.1</spring.mybatis.version>
        <guava.version>31.1-jre</guava.version>
        <testng.version>6.11</testng.version>
        <greenmail.version>2.0.0-alpha-2</greenmail.version>
    </properties>


    <!--使用Maven将部署构件至私服-->
    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <name>Nexus Releases Repository</name>
            <url>http://localhost:8081/repository/maven-releases/</url>
        </repository>

        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>Nexus Snapshots Repository</name>
            <url>http://localhost:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <optional>false</optional>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${springframework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${springframework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-mail</artifactId>
                <version>${springframework.version}</version>
            </dependency>

            <!--这个依赖中只有junit5的引擎-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${springframework.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${common.lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${spring.mybatis.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${common.io.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>5.9.0</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.icegreen</groupId>
                <artifactId>greenmail</artifactId>
                <version>${greenmail.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>

        <pluginManagement>
            <plugins>
                <!--创建项目的源码jar包，在default生命周期的verify阶段，调用插件的jar-no-fork插件目标-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--默认的只支持java1.3   所以需要配置使其支持jdk16，配置外部的maven时，最好将外部maven依赖的jdk和项目使用的jdk保持一致-->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <compilerArguments>
                            <bootclasspath>${java.home}/lib/rt.jar</bootclasspath>
                        </compilerArguments>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <skipTests>false</skipTests>
                        <includes>
                            <include>**/*Tests.java</include>
                            <include>**/*Test.java</include>
                        </includes>
                        <excludes>
                            <exclude>**/Random*Test.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!--代码覆盖率插件-->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.8</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>target/jacoco-report</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!--将src/main/test打进发布的包中-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <tagNameFormat>v${project.version}</tagNameFormat>
                        <tagBase>${project.artifactId}-${project.version}</tagBase>
                        <!--升级子模块-->
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <!--是否生成release-pom.xml-->
                        <generateReleasePoms>false</generateReleasePoms>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>


</project>